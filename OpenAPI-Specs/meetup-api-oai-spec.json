{
  "swagger": "2.0",
  "info": {
    "description": "This is a simplified respresentation of Meetup's published API which you can find out more about https://www.meetup.com/meetup_api/. This Open API specificaton is not published or maintained by Meetup.",
    "version": "3.0.2",
    "title": "Meetup Public Read-only API"
  },
  "host": "api.meetup.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{meetup-group}": {
      "get": {
        "summary": "Retrieve Meetup Group by URL name",
        "operationId": "GetMeetupGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetup-group",
            "in": "path",
            "description": "URL name of Meetup Group. i.e. Azure-Sydney-User-Group",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-delimited list of optional field names to append to the response",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MeetupGroup"
            }
          },
          "404": {
            "description": "Meetup not found"
          },
          "410": {
            "description": "Meetup Group has been deleted"
          }
        }
      }
    },
    "/{meetup-group}/members": {
      "get": {
        "summary": "Retrieve Meetup Group Members List",
        "operationId": "GetMeetupGroupMembersList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetup-group",
            "in": "path",
            "description": "URL name of Meetup Group. i.e. Azure-Sydney-User-Group",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-delimited list of optional field names to append to the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders results according to definitions listed below. May be one of 'interesting', 'name', 'joined', or 'stepup_recommended'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeetupMember"
              }
            }
          },
          "404": {
            "description": "Meetup not found"
          }
        }
      }
    },
    "/{meetup-group}/events": {
      "get": {
        "summary": "Retrieve Meetup Group Events List",
        "operationId": "GetMeetupGroupEventList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetup-group",
            "in": "path",
            "description": "URL name of Meetup Group. i.e. Azure-Sydney-User-Group",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-delimited list of optional field names to append to the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "desc",
            "in": "query",
            "description": "When true, sorts results in descending order. Defaults to false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "has_ended",
            "in": "query",
            "description": "Returns events which have ended when true. When false, returns events which are ongoing or upcoming.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "no_earlier_than",
            "in": "query",
            "description": "An optional timestamp that represents a lower time bound (inclusive) for the start time of events in the local time of the group. If provided, it must be a string in ISO 8601 format without a time zone specified, i.e. 2018-06-01T00:00:00.000",
            "required": false,
            "type": "string"
          },
          {
            "name": "no_later_than",
            "in": "query",
            "description": "An optional timestamp that represents an upper time bound (exclusive) for the start time of events in the local time of the group. If provided, it must be a string in ISO 8601 format without a time zone specified, i.e. 2018-06-01T00:00:00.000",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of results to return in a page. Must be an integer greater than or equal to 1. Defaults to 200",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A comma-delimited list of event statuses. Valid values are: 'cancelled', 'draft', 'past', 'proposed', 'suggested', or 'upcoming'",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeetupEvent"
              }
            }
          },
          "404": {
            "description": "Meetup not found"
          }
        }
      }
    },
    "/{meetup-group}/events/{eventid}": {
      "get": {
        "summary": "Retrieve Meetup Group Event Details",
        "operationId": "GetMeetupGroupEvent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetup-group",
            "in": "path",
            "description": "URL name of Meetup Group. i.e. Azure-Sydney-User-Group",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventid",
            "in": "path",
            "description": "Alphanumeric identifier for a single Meetup Group Event. i.e. '258375479'",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-delimited list of optional field names to append to the response",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MeetupEvent"
            }
          },
          "403": {
            "description": "Meetup Event not available via unauthorised call"
          },
          "404": {
            "description": "Meetup Event not found"
          },
          "410": {
            "description": "Meetup Event has been deleted"
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Retrieve the status of the Meetup API",
        "operationId": "GetAPIStatus",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/APIStatus"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "APIStatus": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Numeric photo ID"
        },
        "base_url": {
          "type": "string",
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "type": "string",
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "type": "string",
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "type": "string",
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "type": "string",
          "description": "Type of photo. One of 'event' or 'member'"
        }
      }
    },
    "Category": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Numeric category id"
        },
        "name": {
          "type": "string",
          "description": "Display name of the category"
        },
        "shortname": {
          "type": "string",
          "description": "String identifier of the category"
        },
        "sort_name": {
          "type": "string",
          "description": "Name used for sorting"
        }
      }
    },
    "MeetupEvent": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique alphanumeric identifier for event"
        },
        "name": {
          "type": "string",
          "description": "Name of the event"
        },
        "link": {
          "type": "string",
          "description": "Link to event on meetup.com"
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organiser."
        },
        "description": {
          "type": "string",
          "description": "Description of the event in HTML. Email addresses and phone numbers will be masked."
        },
        "local_date": {
          "type": "string",
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "type": "string",
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "manual_attendance_count": {
          "type": "integer",
          "description": "Manually entered total attendee headcount, if any exists"
        },
        "past_event_count_inclusive": {
          "type": "integer",
          "format": "int32",
          "description": "Number of past events that happened before and including this event."
        },
        "plain_text_description": {
          "type": "string",
          "description": "Plain text version of the event description. Email addresses and photo numbers will be masked."
        },
        "plain_text_no_images_description": {
          "type": "string",
          "description": "Plain text version of the event description without images. Email addresses and photo numbers will be masked."
        },
        "short_link": {
          "type": "string",
          "description": "A shortened link for the event on meetup.com"
        },
        "status": {
          "type": "string",
          "description": "'cancelled', 'upcoming', 'past', 'proposed', 'suggested' or 'draft'"
        },
        "time": {
          "type": "integer",
          "format": "int64",
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "type": "integer",
          "format": "int64",
          "description": "he local offset from UTC time, in milliseconds"
        },
        "venue": {
          "$ref": "#/definitions/MeetupVenue"
        },
        "waitlist_count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of yes RSVPs including guests"
        }
      }
    },
    "MeetupVenue": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Numeric Venue ID"
        },
        "name": {
          "type": "string",
          "description": "Venue name"
        }
      }
    },
    "MeetupMember": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Numeric Member ID"
        },
        "bio": {
          "type": "string",
          "description": "Member bio. When profile does not belong to the authenticated member, this may be omitted if member opted to hide their bio from others"
        },
        "city": {
          "type": "string",
          "description": "City associated with Member's location"
        },
        "country": {
          "type": "string",
          "description": "Country code associated with Member's location"
        },
        "group_profile": {
          "$ref": "#/definitions/MeetupMemberGroupProfile"
        },
        "joined": {
          "type": "integer",
          "format": "int64",
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "name": {
          "type": "string",
          "description": "Display name for the member"
        },
        "photo": {
          "$ref": "#/definitions/Photo"
        }
      }
    },
    "MeetupMemberGroupProfile": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "format": "int64",
          "description": "The time this member joined the Group, represented as milliseconds since the epoch"
        },
        "intro": {
          "type": "string",
          "description": "Member intro, may be omitted if member opted to hide their intro from other members"
        },
        "group": {
          "$ref": "#/definitions/MeetupGroup"
        },
        "link": {
          "type": "string",
          "description": "Member profile link, provides a link to the members chapter profile"
        },
        "role": {
          "type": "string",
          "description": "The leadership role of this member within the Group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "status": {
          "type": "string",
          "description": "Membership status in this Group. Value may be one of active, blocked, pending, pending_payment or none"
        },
        "title": {
          "type": "string",
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "description": "The last time this member edited their Group profile, represented as milliseconds since the epoch"
        },
        "visited": {
          "type": "integer",
          "format": "int64",
          "description": "The last time this member visited the Group, represented as milliseconds since the epoch"
        }
      }
    },
    "MeetupGroup": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Numeric Group ID"
        },
        "description": {
          "type": "string",
          "description": "Short description of group"
        },
        "group_photo": {
          "$ref": "#/definitions/Photo"
        },
        "key_photo": {
          "$ref": "#/definitions/Photo"
        },
        "approved": {
          "type": "boolean"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "city": {
          "type": "string",
          "description": "City of the group"
        },
        "country": {
          "type": "string",
          "description": "Country of the group"
        },
        "created": {
          "type": "integer",
          "description": "Time the group was created in milliseconds since the epoch"
        },
        "is_simplehtml": {
          "type": "boolean",
          "description": "'true' when the group description has been saved in a simplified HTML format, 'false' otherwise."
        },
        "join_mode": {
          "type": "string",
          "description": "Who can join this group and how. One of 'approval', 'closed', or 'open'"
        },
        "lat": {
          "type": "integer",
          "description": "Latitude"
        },
        "lon": {
          "type": "integer",
          "description": "Longtitude"
        },
        "localized_country_name": {
          "type": "string",
          "description": "Name of country of the group"
        },
        "localized_location": {
          "type": "string",
          "description": "City/State or City/Country of the group"
        },
        "members": {
          "type": "integer",
          "description": "Number of members of the Group"
        },
        "name": {
          "type": "string",
          "description": "Name of the Group (if it has one)"
        },
        "plaintext_description": {
          "type": "string",
          "description": "Description of the group, in plain text format."
        },
        "plain_text_no_images_description": {
          "type": "string",
          "description": "Description of the group, in plain text format with no images."
        },
        "short_link": {
          "type": "string",
          "description": "A shorted URL for the group"
        },
        "url_Name": {
          "type": "string",
          "description": "Used to identify the group on meetup.com"
        },
        "timezone": {
          "type": "string",
          "description": "This represents the universal timezone identifier for the group"
        },
        "next_event": {
          "$ref": "#/definitions/MeetupEvent"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about the Meetup API",
    "url": "https://www.meetup.com/meetup_api/"
  }
}